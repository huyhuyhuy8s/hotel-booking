<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnPasswordShow.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SAAAAABJRU5ErkJggg==
</value>
  </data>
</root>